:root {
  --c-cream: rgb(247, 244, 240);
  --c-cream: rgb(246, 246, 243);
  
  --c-cream-zero: rgba(254, 254, 251, 0);
  --c-cream-transparent: rgb(246, 246, 243,.86);
  --c-blue: rgb(0,81,255);
  --c-blue: rgb(13,72,245);
  --c-blue: rgb(6,76,250);
  --c-blue-transparent: rgb(6,76,250,.9);
  --c-aqua: rgb(80, 220, 255);
  /* --c-gray: rgba(11, 11, 18, 0.35); */
  --c-gray: rgb(165, 165, 160);
  /* --c-grayLight: rgba(195, 196, 200, 0.25); */
  --c-grayLight: rgb(232, 232, 228, 1);
  --c-black: rgb(51, 52, 59);
  --content-pad: 32px;
  --content-pad-big: 96px;
  --split-grid-gap: 32px;
  --img-radius: 2%;

}


@font-face {
  font-family: "PangramDisplay";
  src: url(../public/PPPangramSansRounded-CompressedExtrabold.otf);
}
@font-face {
  font-family: "PangramCompact";
  src: url(../public/PPPangramSansRounded-CompactRegular.otf);
}
@font-face {
  font-family: "PangramText";
  src: url(../public/PPPangramSansRounded-Light.otf);
}
@font-face {
  font-family: "PangramTextBold";
  src: url(../public/PPPangramSansRounded-Medium.otf);
}
@font-face {
  font-family: "PangramHeader";
  src: url(../public/PPPangramSansRounded-NarrowSemibold.otf);
}
@font-face {
  font-family: "PangramHeaderItalic";
  src: url(../public/PPPangramSansRounded-NarrowSemiboldItalic.otf);
}

body {
  text-align: center;
  background-color: var(--c-cream)!important;

  color: var(--c-black);
  font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif, Arial, sans-serif;

}

.PangramDisplay {
  font-family: "PangramDisplay", Arial, sans-serif;
  letter-spacing: .03em;
}
.PangramCompact {
  font-family: "PangramCompact", Arial, sans-serif;
  letter-spacing: .02em;
}
.PangramText {
  font-family: "PangramText", Arial, sans-serif;
  font-weight: 600;
  letter-spacing: .02em;
}
.PangramTextBold {
  font-family: "PangramTextBold", Arial, sans-serif;
  letter-spacing: .02em;
}
.PangramHeader {
  font-family: "PangramHeader", Arial, sans-serif;
  letter-spacing: .03em;
}
.PangramHeaderItalic {
  font-family: "PangramHeaderItalic", Arial, sans-serif;
  letter-spacing: .02em;
}

a {
  text-decoration: none;
  color: var(--c-black);
}
.centerText {
  text-align: center;
}

button {
  border: none;
  cursor: pointer;

  font-family: PangramHeader, Arial, sans-serif;
  
  background-color: var(--c-blue);
  color: var(--c-cream);
  
  padding: .5em 1em;
  
  border-radius: .5em;
}

.splitGrid {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: var(--split-grid-gap);
  /* background-color: rgba(34, 0, 255, 0.07); */
  /* height: min-content; */

}

.splitDiv {
  width: 100%;
  vertical-align: top;

}
.leftSplit {
  /* background-color: rgb a(34, 0, 255, 0.07); */
}

.rightSplit {
  /* background-color: rgba(255, 0, 0, 0.07); */
}

.content-padding{
  padding: 0 var(--content-pad) var(--content-pad) var(--content-pad);
}

.strikethrough {
  text-decoration: line-through;
}


.svgContainer {
  width: 5em;
  height: auto;
  /* aspect-ratio: 1; */
  /* border: red 1px solid; */
}


.guppyContainer {
  width: 10em;
  aspect-ratio: 1216/652;
  position: absolute;

  /* background-color: rgba(255, 166, 0, 0.148); */
  /* border: red solid .2px; */
}

.guppySVGboth {
  width: 100%;
  position: absolute;

  display: block;
}
.guppySVGfill {
  fill: var(--c-blue);
  transition: 500ms ease-in-out;
}
.guppySVGbg {
  fill: var(--c-cream);
  transition: 400ms;
}
.fishSVG {
  width: var(--size_param);
  transition: 500ms;
}
.clickableFish:hover {
  cursor: pointer;
  transform: scale(1.2);
}

.clickableFish:hover .guppySVGfill {
  /* fill:red; */
  /* fill: rgb(6,76,250); */
}
.clickableFish:hover .guppySVGbg {
  fill:rgb(118, 222, 224);
}
.ripTransition .guppySVGfill {
  fill: rgb(216, 25, 86) ;
}
.initRipTransition .guppySVGfill {
  fill: rgb(255, 70, 95) ;
}
/* ///////////////////////////////////////////// */
.erase-transition {
  z-index: 1000;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  transform-origin: bottom;
  pointer-events: none;
}
.reveal-transition {
  z-index: 1000;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  background-color: var(--c-cream);
  transform-origin: top;
  pointer-events: none;
}
.transition-container {
  z-index: 900;
  background-color: var(--c-cream);
  height: 100vh;
  width: 100vw;
  position: fixed;
  top: 0;
  left: 0;
  opacity: 0;
  pointer-events: none;
}
#erase-container {
  opacity: 0;
  width: 100%;
}
#load-container {
  opacity: 1;
  width: 100%;

}


/* TEST TRANSITION  ///////////////////////////// */
/* #erase-container {background-color: rgb(255, 0, 0);}
.reveal-transition {background-color: rgb(0, 255, 30);} */
/* #erase-container {background-color: var(--c-blue);}
.reveal-transition {background-color: var(--c-blue);} */
/* TEST TRANSITION  ///////////////////////////// */

.transition-container p {
  font-size: 5em;
  font-family: PangramHeader, Arial, sans-serif;
  color: var(--c-gray);
  margin-top: 40vh;
  opacity: 1;
  /* animation: loadingFlash 100ms infinite; */
}
/* @keyframes loadingFlash {
  from {
    opacity: 1
  }
  to {
    opacity: .5
  }
} */
.beginErase {
  animation: eraseFade 300ms ease-in-out;
  animation-iteration-count: 1;
  animation-fill-mode: forwards;
}
.removeErase {
  animation: eraseFade 600ms ease-in-out;
  animation-iteration-count: 1;
  animation-direction: reverse;
  animation-fill-mode: forwards;
  animation-delay: 1s;
}


@keyframes eraseFade {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}


.bubbleContainer {
  position: fixed;
  top: 0;
  left: 0;
  height: 100vh;
  width: 100%;
  z-index: 200;
  pointer-events: none;
  /* background-color: rgba(255, 0, 0, 0.255); */
}

.animateDiv {
  pointer-events: none;
}

@media only screen and (max-width: 768px) {

  
  .splitGrid {
    display: block;
    width: 100%;

    /* grid-template-columns: repeat(2, minmax(0, 1fr)); */
    /* gap: var(--split-grid-gap); */
    /* height: min-content; */

  }
  .splitDiv {
    width: 100%;
    vertical-align: top;
  
  }
  .content-padding {
    padding: 0 24px;
  }
  .leftSplit {
    /* background-color: rgb a(34, 0, 255, 0.07); */
  }
  
  .rightSplit {
    /* background-color: rgba(255, 0, 0, 0.07); */
  }
}